{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/solomonsunday/Code/Haggerston_Navigation_Project/haggerston_pack_navigator/app/components/DirectionMap.tsx"],"sourcesContent":["\"use client\";\nimport {\n  GoogleMap,\n  useJsApiLoader,\n  Marker,\n  DirectionsRenderer,\n} from \"@react-google-maps/api\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useDestination } from \"../context/selectedDestinationContext\";\nimport UseGetCurrentLocation from \"../Hooks/useCurrentLocation\";\n\nconst containerStyle: React.CSSProperties = {\n  width: \"100vw\",\n  height: \"100vh\",\n  position: \"relative\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  backgroundColor: \"#f0f0f0\",\n  zIndex: 0,\n};\n\ninterface MapInstance extends google.maps.Map {}\n\nexport default function DirectionMap() {\n  const [directions, setDirections] =\n    useState<google.maps.DirectionsResult | null>(null);\n\n  const { currentLocation, error } = UseGetCurrentLocation();\n  const { selectedDestination } = useDestination();\n\n  const center = {\n    lat: currentLocation?.lat || 0,\n    lng: currentLocation?.lng || 0,\n  };\n\n  if (error) {\n    return <p>Error: {error}</p>;\n  }\n\n  const defaultCenter = {\n    lat: currentLocation?.lat,\n    lng: currentLocation?.lng,\n  };\n\n  const mapref = useRef<MapInstance | null>(null);\n  const { isLoaded } = useJsApiLoader({\n    id: \"google-map-script\",\n    googleMapsApiKey: process.env.NEXT_PUBLIC_GOOGLE_API_KEY!,\n  });\n\n  const [map, setMap] = useState(null);\n\n  interface MapCenter {\n    lat: number;\n    lng: number;\n  }\n\n  const onLoad = useCallback((map: MapInstance): void => {\n    mapref.current = map;\n    map.setZoom(14);\n\n    const bounds = new window.google.maps.LatLngBounds(\n      center || (defaultCenter as MapCenter)\n    );\n    map.fitBounds(bounds);\n  }, []);\n\n  useEffect(() => {\n    if (currentLocation && selectedDestination) {\n      const directionsService = new google.maps.DirectionsService();\n      directionsService.route(\n        {\n          origin: new google.maps.LatLng(\n            currentLocation.lat,\n            currentLocation.lng\n          ),\n          destination: new google.maps.LatLng(\n            selectedDestination.coord.lat,\n            selectedDestination.coord.lng\n          ),\n          travelMode: google.maps.TravelMode.DRIVING,\n        },\n        (result, status) => {\n          if (status === google.maps.DirectionsStatus.OK) {\n            setDirections(result);\n          } else {\n            console.error(\"Error fetching directions: \", result);\n          }\n        }\n      );\n    }\n  }, [currentLocation]);\n\n  const handleNavigate = () => {\n    const origin = `${currentLocation?.lat},${currentLocation?.lng}`;\n    const destination = `${selectedDestination?.coord.lat},${selectedDestination?.coord.lng}`;\n    window.open(\n      `https://www.google.com/maps/dir/?api=1&origin=${origin}&destination=${destination}&travelmode=driving`,\n      \"_blank\"\n    );\n  };\n\n  if (!isLoaded) return <p>Loading...</p>;\n\n  return (\n    <>\n      <GoogleMap\n        onLoad={onLoad}\n        mapContainerStyle={containerStyle}\n        center={center || selectedDestination}\n        zoom={14}\n        onUnmount={() => setMap(null)}\n      >\n        <Marker position={center || selectedDestination}></Marker>\n        {directions && (\n          <DirectionsRenderer\n            directions={directions}\n            options={{\n              polylineOptions: {\n                strokeColor: \"#FF0000\",\n                strokeWeight: 4,\n              },\n              suppressMarkers: true,\n            }}\n          />\n        )}\n        <Marker\n          position={center || selectedDestination}\n          icon={{\n            url: \"https://maps.google.com/mapfiles/ms/icons/blue-dot.png\",\n            scaledSize: new google.maps.Size(40, 40),\n          }}\n        />\n      </GoogleMap>\n      <button\n        onClick={handleNavigate}\n        className=\"fixed bottom-10 right-4 bg-blue-600 text-white px-5 py-3 rounded\"\n      >\n        Start Navigation\n      </button>\n    </>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}